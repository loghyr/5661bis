<!-- Copyright (C) The IETF Trust (2011) -->
<!-- Copyright (C) The Internet Society (2011) -->

  <section anchor="op_RECLAIM_COMPLETE" title="Operation 58: RECLAIM_COMPLETE - Indicates Reclaims Finished">
    <section toc='exclude' anchor="ss:op_RECLAIM_COMPLETE:A" title="ARGUMENT">
      <?rfc include='autogen/reclaim_complete_args.xml'?>
    </section>

    <section toc='exclude' anchor="ss:op_RECLAIM_COMPLETE:R" title="RESULT">
      <?rfc include='autogen/reclaim_complete_res.xml'?>
    </section>

    <section toc='exclude' anchor="ss:op_RECLAIM_COMPLETE:D" title="DESCRIPTION">
      <t>
        A RECLAIM_COMPLETE operation is used to indicate that the client has
        reclaimed all of the locking state that it will recover, when it is
        recovering state due to either a server restart or the transfer of a
        file system to another server.  There are two types of
        RECLAIM_COMPLETE operations:
      </t>

      <t>
        <list style='symbols'>
          <t>
            When rca_one_fs is FALSE, a global RECLAIM_COMPLETE is being done.
            This indicates that recovery of all locks that the client held on
            the previous server instance have been completed.
          </t>

          <t>
            When rca_one_fs is TRUE, a file system-specific RECLAIM_COMPLETE
            is being done.  This indicates that recovery of locks for a single
            fs (the one designated by the current filehandle) due to a file
            system transition have been completed.  Presence of a current
            filehandle is only required when rca_one_fs is set to TRUE.
          </t>
        </list>
      </t>

      <t>
        Once a RECLAIM_COMPLETE is done, there can be no further reclaim
        operations for locks whose scope is defined as having completed
        recovery.  Once the client sends RECLAIM_COMPLETE, the server will
        not allow the client to do subsequent reclaims of locking state for
        that scope and, if these are attempted, will return NFS4ERR_NO_GRACE.
      </t>

      <t>
        Whenever a client establishes a new client ID and before it does the
        first non-reclaim operation that obtains a lock, it MUST send a
        RECLAIM_COMPLETE with rca_one_fs set to FALSE, even if there are no
        locks to reclaim.  If non-reclaim locking operations are done before
        the RECLAIM_COMPLETE, an NFS4ERR_GRACE error will be returned.
      </t>

      <t>
        Similarly, when the client accesses a file system on a new server,
        before it sends the first non-reclaim operation that obtains a lock
        on this new server, it MUST send a RECLAIM_COMPLETE with rca_one_fs
        set to TRUE and current filehandle within that file system, even if
        there are no locks to reclaim.  If non-reclaim locking operations are
        done on that file system before the RECLAIM_COMPLETE, an
        NFS4ERR_GRACE error will be returned.
      </t>

      <t>
        Any locks not reclaimed at the point at which RECLAIM_COMPLETE is
        done become non-reclaimable.  The client MUST NOT attempt to reclaim
        them, either during the current server instance or in any subsequent
        server instance, or on another server to which responsibility for
        that file system is transferred.  If the client were to do so, it
        would be violating the protocol by representing itself as owning
        locks that it does not own, and so has no right to reclaim.  See
        <xref target="ss:state_management:NPaR" /> for a discussion of edge conditions related to lock
        reclaim.
      </t>

      <t>
        By sending a RECLAIM_COMPLETE, the client indicates readiness to
        proceed to do normal non-reclaim locking operations.  The client
        should be aware that such operations may temporarily result in
        NFS4ERR_GRACE errors until the server is ready to terminate its grace
        period.
      </t>
    </section>

    <section toc='exclude' anchor="ss:op_RECLAIM_COMPLETE:I" title="IMPLEMENTATION">
      <t>
        Servers will typically use the information as to when reclaim
        activity is complete to reduce the length of the grace period.  When
        the server maintains in persistent storage a list of clients that
        might have had locks, it is in a position to use the fact that all
        such clients have done a RECLAIM_COMPLETE to terminate the grace
        period and begin normal operations (i.e., grant requests for new
        locks) sooner than it might otherwise.
      </t>

      <t>
        Latency can be minimized by doing a RECLAIM_COMPLETE as part of the
        COMPOUND request in which the last lock-reclaiming operation is done.
        When there are no reclaims to be done, RECLAIM_COMPLETE should be
        done immediately in order to allow the grace period to end as soon as
        possible.
      </t>

      <t>
        RECLAIM_COMPLETE should only be done once for each server instance or
        occasion of the transition of a file system.  If it is done a second
        time, the error NFS4ERR_COMPLETE_ALREADY will result.  Note that
        because of the session feature's retry protection, retries of
        COMPOUND requests containing RECLAIM_COMPLETE operation will not
        result in this error.
      </t>

      <t>
        When a RECLAIM_COMPLETE is sent, the client effectively acknowledges
        any locks not yet reclaimed as lost.  This allows the server to
        reenable the client to recover locks if the occurrence of edge
        conditions, as described in <xref target="ss:state_management:NPaR" />, had caused the server
        to disable the client from recovering locks.
      </t>
    </section>
  </section>

